.row {
  // This is a standard used nowadays.
  max-width: $grid-width;

  // This does a magic trick to center a block element inside a block element
  margin: 0 auto;

  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  @include clearfix;

  // Select the elements of which the attribute class starts(^) with col-
  [class^="col-"] {
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }

  // This was awesome!
  // So every column has a gutter (margin-right), so to get the width of each type of column
  // It needs to calc the 100% of the widht minus x-1 times gutter-horizontal between x.
  // calc is not sass, it's css because for the stuff like percentages it needs the browser to render
  // To know the value and make the calculation
  .col-1-of-2 {
    width: calc( ( 100% - #{$gutter-horizontal}) / 2 );
  }

  .col-1-of-3 {
    width: calc( ( 100% - 2 * #{$gutter-horizontal}) / 3 );
  }

  .col-2-of-3 {
    width: calc( 2* ( ( 100% - 2 * #{$gutter-horizontal}) / 3 ) + #{$gutter-horizontal} );
  }

  .col-1-of-4 {
    width: calc( ( 100% - 3 * #{$gutter-horizontal}) / 4 );
  }

  .col-2-of-4 {
    width: calc(  2 *  ( ( 100% - 3 * #{$gutter-horizontal}) / 4 ) + #{$gutter-horizontal});
  }

  .col-3-of-4 {
    width: calc(  3 *  ( ( 100% - 3 * #{$gutter-horizontal}) / 4 ) + 2 * #{$gutter-horizontal});
  }
}
